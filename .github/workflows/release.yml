name: release

concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "llvmorg-*"

jobs:
  create_release:
    name: Create release
    runs-on: windows-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: llvmorg-16.0.6
        release_name: llvmorg-16.0.6
        draft: true
        prerelease: true

  upload_assets:
    name: Build llvm on Windows
    needs: create_release
    runs-on: windows-latest
    strategy:
      matrix:
        rtlib: ["MultiThreadedDLL"]
    steps:
    - name: Install dependency
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install cmake ninja vswhere

    - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1
      with:
        sdk-version: 19041

    - name: Checkout by pushing tags
      if: ${{ github.event_name == 'push' }}
      run: git clone --branch llvmorg-16.0.6 --depth 1 https://github.com/llvm/llvm-project.git

    - name: Build llvm
      run: |
        $vsPath = (vswhere -latest -property installationPath)
        Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
        Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation -DevCmdArguments "-arch=x64 -host_arch=x64 -winsdk=10.0.19041.0"
        $Env:CC = "clang-cl"
        $Env:CXX = "clang-cl"
        $cmake_sys_ver = "10.0.19041.0"
        cmake -Bbuild -GNinja "-DCMAKE_SYSTEM_VERSION=$cmake_sys_ver" -DCMAKE_MSVC_RUNTIME_LIBRARY=${{ matrix.rtlib }} -DCMAKE_BUILD_TYPE=Release -DCPACK_GENERATOR=ZIP "-DCMAKE_INSTALL_PREFIX=$pwd\\prefix" -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_ENABLE_PROJECTS="lld;clang;clang-tools-extra" llvm-project\\llvm
        cmake --build build

    - name: Package llvm
      run: |
        cmake --build build --target package

    - name: Upload LLVM zip package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: build/LLVM-16.0.6-win64.zip
        asset_name: LLVM-16.0.6-win64-${{ matrix.rtlib }}.zip
        asset_content_type: application/zip
